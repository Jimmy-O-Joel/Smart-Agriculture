<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Smart IoT</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <link rel="stylesheet" href="css/styles.css">
</head>

<body>
    <h1><strong>Smart Agricultural Systems</strong></h1>
    <div class="container cr">
        <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="false">
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active"
                    aria-current="true" aria-label="Slide 1"></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1"
                    aria-label="Slide 2"></button>

            </div>
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="images/technician.png" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>IoT in Agriculture</h5>
                        <p>IoT will revolutionize the future of farming.</p>
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="images/Hydroponic-farming.png" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Smart Farming</h5>
                        <p>Agricultural crop monitoring using IOT.</p>
                    </div>
                </div>
                
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>

    </div> 
    <div class="container gauge__container">
        <div class="gauge">
            <div class="outer">
                <div class="inner">
                    <div >
                        <p>Moisture Content</p>
                        <p id="number"><%=moisture%>%</p>
                    </div>
                </div>
            </div>
            <p id="pumpComment"><%=comment%></p>
        </div>
        <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="160px" height="160px">
            <defs>
                <linearGradient id="GradientColor">
                    <stop offset="0%" stop-color="Green" />
                    <stop offset="100%" stop-color="Red" />
                </linearGradient>
            </defs>
            <circle cx="80" cy="80" r="70" stroke-linecap="round" id="circle" style="--value: 0"/>
        </svg>
        


    </div> 
    <div class="container">
        <div class="pump"><b id="pumpStatus">Pump Disabled</b></div>
        <form action="/switch" method="post">
            <label class="switch">
                <input type="checkbox" class="checkbox" id="btn" >
                <span class="slider round"></span>
            </label>
        </form>
    </div>
    <script src="https://js.pusher.com/7.1/pusher.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script>
        const number = document.getElementById("number").innerHTML.slice(0,2)
        
        $("circle").css("stroke-dashoffset", (472 - (472 * 0.01 * number)))        
                        
        document.getElementById("btn").onclick = async ()=>{
            let checkBox = document.getElementById("btn")

            if (checkBox.checked == true) {
                document.getElementById("pumpStatus").innerHTML = "Pump Activated"
                pumpStatus(true)
            }
            else {
                document.getElementById("pumpStatus").innerHTML = "Pump Disabled"
                pumpStatus(false)
            }
        }
        // Enable pusher logging - don't include this in production
        //Pusher.logToConsole = true;

        var pusher = new Pusher('4d4f0d0cf3b7fc4b6e60', {
            cluster: 'mt1'
        });

        var channel = pusher.subscribe('newValue');
        channel.bind('newValue', async (data)=>{
 
            if (await data < 10 && document.querySelector('input[type="checkbox"]').checked == false) {
                document.querySelector('input[type="checkbox"]').checked = true
                document.getElementById("pumpComment").innerHTML = "Extremely Low"
                document.getElementById("pumpStatus").innerHTML = "Pump Activated"
                pumpStatus(true)
            } else if (await data < 30 && document.querySelector('input[type="checkbox"]').checked == true) {
                document.querySelector('input[type="checkbox"]').checked = false
                document.getElementById("pumpComment").innerHTML = "Just Fine"
                document.getElementById("pumpStatus").innerHTML = "Pump Disabled"
                pumpStatus(false)
            } else {
                document.querySelector('input[type="checkbox"]').checked = false
                document.getElementById("pumpComment").innerHTML = "Very Good"
                document.getElementById("pumpStatus").innerHTML = "Pump Disabled"
                pumpStatus(false)
            }
        
            
            document.getElementById("number").innerHTML = `${data}%`
            $("circle").css("stroke-dashoffset", (472 - (472 * 0.01 * data)))

            

        });

        const pumpStatus = async(pumpState)=>{
            pumpData = {
                "pumpState": pumpState
            }
            // Options to be given as parameter
            // in fetch for making requests
            // other then GET
            let options = {
                method: 'POST',
                headers: {
                    'Content-Type':
                        'application/json;charset=utf-8'
                },
                body: JSON.stringify(pumpData)
            }

            let fetchRes = await fetch(
                "http://localhost:3000/switch",
                options);
            fetchRes.then(res =>
                res.json()).then(d => {
                    console.log(d)
                })
        }

        

    </script>
    
</body>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2"
        crossorigin="anonymous"></script>

</html>